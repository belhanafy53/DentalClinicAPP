using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using System.Windows.Forms;
using System.Data.Entity;
using System.Data.SqlClient;
using System.Configuration;
using DentalClinicAPP.DataBase.Model;
using DentalClinicAPP.DataBase.ModelEvents;
using DentalClinicAPP.DataBase.ModelSecurity;
using DentalClinicAPP.Classes;

namespace DentalClinicAPP.Forms.BasicsCode
{
    public partial class CompaniesFrm : Form
    {
        Model1 DNtMDB = new Model1();
        ModelEvents DNtEVDB = new ModelEvents();
        ModelSecurity DNtSCDB = new ModelSecurity();

        //int Vint_IdItem =0;
        int Vint_Parent_ID = 0;
        int VintManagId = 0;
        int Vint_AccGuid = 0;
        //string Vst_Code = "";

        public CompaniesFrm()
        {
            InitializeComponent();


            // This line of code is generated by Data Source Configuration Wizard
            //tbl_ManagementTableAdapter1.Fill(managements1.Tbl_Management);
        }

        private void Dg_E()
        {
            //CodeTxt.Text = "";
            //DescEtxt.Text = "";
            //DescArtxt.Text = "";
            //dataGridView1.Columns["Activecode"].Visible = true;
            //dataGridView1.Columns["dec_en"].Visible = true;
            //dataGridView1.Columns["dec_ar"].Visible = true;
            //dataGridView1.Columns["dec_en"].Width = 300;
            //dataGridView1.Columns["dec_ar"].Width = 300;
            //CodeTxt.Focus();
        }
        private void Dg_Ar()
        {
            //CodeTxt.Text = "";
            //DescEtxt.Text = "";
            //DescArtxt.Text = "";
            //dataGridView1.Columns["Activecode"].HeaderText = "الكود";
            //dataGridView1.Columns["dec_en"].HeaderText = "الوصف الانجليزي";
            //dataGridView1.Columns["dec_ar"].HeaderText = "الوصف العربي";
            //dataGridView1.Columns["dec_en"].Width = 300;
            //dataGridView1.Columns["dec_ar"].Width = 300;
            //CodeTxt.Focus();
        }
        private List<TreeNode> CurrentNodeMatches = new List<TreeNode>();
        private int LastNodeIndex = 0;
        private string LastSearchText;
        private void CompaniesFrm_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'accountGuidDs.DataTable1' table. You can move, or remove it, as needed.
            this.dataTable1TableAdapter.Fill(this.accountGuidDs.DataTable1);
            //// TODO: This line of code loads data into the 'managements1.Tbl_ManagementCategory' table. You can move, or remove it, as needed.
            //dataGridViewX1.DataSource = DNtMDB.Tbl_Accounting_Guid.OrderBy(x => x.Account_NO).ToList();

            using (SqlConnection connection = new SqlConnection(Program.GlbV_Connection))
            {
                ViewTree.fillTreeMulti(treeView1, connection, SelectTreeTable(), "Management_ID", "Name", "Parent_ID", "ManagementCategory_ID");
            }

            RowIDtxt.Text = "";
            if (Program.GlbV_Language == "en")
            {
                LangTxtBox.Text = "en";
                simpleButton3_Click(sender, e);

            }
            else if (Program.GlbV_Language == "ar-EG")
            {
                LangTxtBox.Text = "ar-EG";
                simpleButton4_Click(sender, e);

            }


        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            //Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo("en");
            //LangTxtBox.Text = "";
            //this.RightToLeft = RightToLeft.No;
            LangTxtBox.Text = "en";
            //InitializeComponent();
            //Dg_E();

            comboBox1.DataSource = DNtMDB.Tbl_ManagementCategory.ToList();
            comboBox1.DisplayMember = "Name";
            comboBox1.ValueMember = "ID";
            comboBox1.SelectedItem = null;

            comboBox2.DataSource = DNtMDB.Tbl_ManagementCategory.ToList();
            comboBox2.DisplayMember = "Name";
            comboBox2.ValueMember = "ID";
            comboBox2.SelectedItem = null;

            if (comboBox1.Items.Count > 0)
            {
                comboBox1.SelectedIndex = -1;
                comboBox1.Text = "Choose Management category";
            }

            if (comboBox2.Items.Count > 0)
            {
                comboBox2.SelectedIndex = -1;
                comboBox2.Text = "Choose Management category";
            }


            Nametxt.Select();
            this.ActiveControl = Nametxt;
            Nametxt.Focus();
        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {
            //Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo("ar-EG");
            //LangTxtBox.Text = "";

            //this.RightToLeft = RightToLeft.Yes;
            //RightToLeftLayout = true;
            ////this.Controls.Clear();
            //InitializeComponent();
            //var listAnalysis = DNtMDB.Tbl_Activities.OrderBy(x => x.Activecode).ToList();
            ////dataGridView1.DataSource = listAnalysis;
            //Dg_Ar();
            //LangTxtBox.Text = "ar-EG";
            ////CodeTxt.Focus();
            comboBox1.DataSource = DNtMDB.Tbl_ManagementCategory.ToList();
            comboBox1.DisplayMember = "Name";
            comboBox1.ValueMember = "ID";
            comboBox1.SelectedItem = null;

            comboBox2.DataSource = DNtMDB.Tbl_ManagementCategory.ToList();
            comboBox2.DisplayMember = "Name";
            comboBox2.ValueMember = "ID";
            comboBox2.SelectedItem = null;

            if (comboBox1.Items.Count > 0)
            {
                comboBox1.SelectedIndex = -1;
                comboBox1.Text = "احتر نوع الاداره / الشركه";
            }

            if (comboBox2.Items.Count > 0)
            {
                comboBox2.SelectedIndex = -1;
                comboBox2.Text = "احتر نوع الاداره / الشركه";
            }



            Nametxt.Select();
            this.ActiveControl = Nametxt;
            Nametxt.Focus();
        }
        private void SearchNodes(string SearchText, TreeNode StartNode)
        {
            //TreeNode node = null;
            while (StartNode != null)
            {
                if (StartNode.Text.Trim().Contains(SearchText.Trim()))
                {
                    CurrentNodeMatches.Add(StartNode);
                }
                if (StartNode.Nodes.Count != 0)
                {
                    SearchNodes(SearchText, StartNode.Nodes[0]);
                }
                StartNode = StartNode.NextNode;
            }
        }
        string SelectTreeTable()
        {
            string Sql = "Select * From Tbl_Management";
            
            return Sql;
        }
        string SelectTreeTableByName(string TABLE, string Name, string TxtSearch, string StoreCode)
        {
            string Sql = ("Select * From (" + TABLE + ")Chaild WHERE Chaild." + Name + " ='" + TxtSearch + "'|| " + StoreCode + " ='" + TxtSearch + "'");

            return Sql;
        }



        private void Nametxt_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                simpleButton5.Focus();
            }
        }

        private void Nametxt_TextChanged(object sender, EventArgs e)
        {
            if (Nametxt.Text == "")
            {

                VintManagId = 0;
            }
        }

        private void simpleButton5_Click(object sender, EventArgs e)
        {
            string searchText = this.Nametxt.Text;

            if (string.IsNullOrEmpty(searchText))
            {
                //txtSelected.Focus();
            }
            else
            {
                if (LastSearchText != searchText)
                {
                    // It's a New Search
                    CurrentNodeMatches.Clear();
                    LastSearchText = searchText;
                    LastNodeIndex = 0;
                    SearchNodes(searchText, treeView1.Nodes[0]);
                }
                if (LastNodeIndex >= 0 && CurrentNodeMatches.Count > 0 && LastNodeIndex < CurrentNodeMatches.Count)
                {
                    TreeNode SelectedNode = CurrentNodeMatches[LastNodeIndex];
                    LastNodeIndex++;
                    this.treeView1.SelectedNode = SelectedNode;
                    this.treeView1.SelectedNode.Expand();
                    this.treeView1.Select();

                }
            }
        }

        private void treeView1_Click(object sender, EventArgs e)
        {
            textBox2.Focus();
        }

        private void treeView1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                textBox2.Focus();
            }
        }

        private void treeView1_AfterSelect(object sender, TreeViewEventArgs e)
        {
            textBox2.Text = "";
            textBox8.Text = "";
            textBox1.Text = "";
            RowIDtxt.Text = "";
            ParentIdtxt.Text = "";
            comboBox1.SelectedIndex = -1;
            comboBox1.Text = "Choose Management Category";
            VintManagId = int.Parse(treeView1.SelectedNode.Tag.ToString());
            RowIDtxt.Text = VintManagId.ToString();
            if (treeView1.SelectedNode.Name != "")
            {
                Vint_Parent_ID = int.Parse(treeView1.SelectedNode.Name.ToString());
                ParentIdtxt.Text = Vint_Parent_ID.ToString();
            }
            var listItem = DNtMDB.Tbl_Management.FirstOrDefault(x => x.Management_ID == VintManagId);

            if (listItem != null)
            {
                string Vstr_Name = listItem.Name;
                textBox2.Text = Vstr_Name;
                comboBox1.SelectedValue = int.Parse(listItem.ManagementCategory_ID.ToString());
                if (listItem.AccountGuidID != null)
                {
                    Vint_AccGuid = int.Parse(listItem.AccountGuidID.ToString());
                    var ListAccGuid = DNtMDB.Tbl_Accounting_Guid.Where(x => x.ID == Vint_AccGuid).ToList();
                    textBox8.Text = ListAccGuid[0].Account_NO.ToString();
                    textBox1.Text = ListAccGuid[0].Name.ToString();
                }
                groupBox3.Text = ViewTree.SelectFullHirachyMngmnt(treeView1, VintManagId, Vint_Parent_ID);

            }
        }

        private void textBox7_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter && textBox7.Text != string.Empty)
            {
                if (dataGridViewX7.Rows.Count == 1)
                {
                    textBox6.Text = dataGridViewX7.CurrentRow.Cells[1].Value.ToString();


                }
                if (dataGridViewX7.Rows.Count > 1)
                {
                    dataGridViewX7.Focus();
                }


                //simpleButton1.Focus();
            }
        }

        private void textBox7_Enter(object sender, EventArgs e)
        {
            textBox7.BackColor = Color.Coral;
        }

        private void textBox7_Leave(object sender, EventArgs e)
        {
            textBox7.BackColor = Color.White;
        }

        private void textBox7_TextChanged(object sender, EventArgs e)
        {
            string Vst_AccountNoSearch = textBox7.Text.Trim();
            this.dataTable1TableAdapter.FillByName(this.accountGuidDs.DataTable1, Vst_AccountNoSearch);
        }

        private void dataGridViewX7_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            textBox7.Text = dataGridViewX7.CurrentRow.Cells[1].Value.ToString();
            textBox6.Text = dataGridViewX7.CurrentRow.Cells[2].Value.ToString();
            txtGuidID.Text = dataGridViewX7.CurrentRow.Cells[0].Value.ToString();
        }

        private void textBox8_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter && textBox8.Text != string.Empty)
            {
                if (dataGridViewX1.Rows.Count == 1)
                {
                    textBox1.Text = dataGridViewX1.CurrentRow.Cells[1].Value.ToString();


                }
                if (dataGridViewX1.Rows.Count > 1)
                {
                    dataGridViewX1.Focus();
                }


                //simpleButton1.Focus();
            }
        }

        private void textBox8_TextChanged(object sender, EventArgs e)
        {
            string Vst_AccountNoSearch = textBox8.Text.Trim();
            this.dataTable1TableAdapter.FillByName(this.accountGuidDs.DataTable1, Vst_AccountNoSearch);
            //dataGridViewX1.DataSource = DNtMDB.Tbl_Accounting_Guid.Where(x=>x.Account_NO.Contains(Vst_AccountNoSearch)).ToList();
        }

        private void textBox8_Enter(object sender, EventArgs e)
        {
            textBox8.BackColor = Color.Coral;
        }

        private void textBox8_Leave(object sender, EventArgs e)
        {
            textBox8.BackColor = Color.White;
        }

        private void dataGridViewX1_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            textBox8.Text = dataGridViewX1.CurrentRow.Cells[1].Value.ToString();
            textBox1.Text = dataGridViewX1.CurrentRow.Cells[2].Value.ToString();
            RowAccGuidUptxt.Text = dataGridViewX1.CurrentRow.Cells[0].Value.ToString();
        }

        private void dataGridViewX7_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                textBox7.Text = dataGridViewX7.CurrentRow.Cells[1].Value.ToString();
                textBox6.Text = dataGridViewX7.CurrentRow.Cells[2].Value.ToString();
                txtGuidID.Text = dataGridViewX7.CurrentRow.Cells[0].Value.ToString();
                simpleButton1.Focus();

            }
        }

        private void dataGridViewX1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                textBox8.Text = dataGridViewX1.CurrentRow.Cells[1].Value.ToString();
                textBox1.Text = dataGridViewX1.CurrentRow.Cells[2].Value.ToString();
                RowAccGuidUptxt.Text = dataGridViewX1.CurrentRow.Cells[0].Value.ToString();
                simpleButton1.Focus();

            }
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            if (RowIDtxt.Text != "" && textBox3.Text == "")
            {
                int? Vint_AccGuid = null;
                if (RowAccGuidUptxt.Text == "")
                {
                    Vint_AccGuid = null;
                }
                else
                {
                    Vint_AccGuid = int.Parse(RowAccGuidUptxt.Text);
                }
                //*************Update
                VintManagId = int.Parse(RowIDtxt.Text);

                var listItem = DNtMDB.Tbl_Management.FirstOrDefault(x => x.Management_ID == VintManagId);

                if (listItem != null)
                {
                    listItem.Name = textBox2.Text;
                    listItem.ManagementCategory_ID = int.Parse(comboBox1.SelectedValue.ToString());
                    listItem.AccountGuidID = Vint_AccGuid;
                    Vint_Parent_ID = int.Parse(listItem.Parent_ID.ToString());
                    DNtMDB.SaveChanges();
                    MessageBox.Show("Updated");
                    TreeNode node = new TreeNode();
                    node.Text = textBox2.Text;
                    node.Name = VintManagId.ToString();
                    node.Tag = Vint_Parent_ID.ToString();
                    node.Expand();

                }
            }
            else if (RowIDtxt.Text != "" && textBox3.Text != "")
            {
                int? Vint_AccGuid = null;
                int? Vint_Parentid = null;
                if (txtGuidID.Text == "")
                {
                    Vint_AccGuid = null;
                }
                else
                {
                    Vint_AccGuid = int.Parse(txtGuidID.Text);
                }
                if (RowIDtxt.Text == "")
                {
                    Vint_Parentid = null;
                }
                else
                {
                    Vint_Parentid = int.Parse(RowIDtxt.Text);
                }
                //******Insert********
                var VintMaxID = DNtMDB.Tbl_Management.Max(x => x.Management_ID);
                Tbl_Management Mng = new Tbl_Management()
                {
                    Management_ID = VintMaxID + 1,
                    Name = textBox3.Text,
                    ManagementCategory_ID = int.Parse(comboBox2.SelectedValue.ToString()),
                    Parent_ID = Vint_Parentid,
                    AccountGuidID = Vint_AccGuid,

                };
                DNtMDB.Tbl_Management.Add(Mng);
                DNtMDB.SaveChanges();
                MessageBox.Show("Saved");
                TreeNode node = new TreeNode();
                node.Text = textBox3.Text;
                node.Name = (VintMaxID + 1).ToString();
                node.Tag = Vint_Parentid.ToString();
                node.Expand();
                treeView1.SelectedNode.Nodes.Add(node);


            }
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            if (RowIDtxt.Text != "")
            {
                //*************Delete
                VintManagId = int.Parse(RowIDtxt.Text);

                if (LangTxtBox.Text == "en")
                {
                    var result1 = MessageBox.Show("Do you want to delete this Management  ?", "Delete Management ", MessageBoxButtons.YesNo);
                    if (result1 == DialogResult.Yes)
                    {
                        var resultR = DNtMDB.Tbl_Management.FirstOrDefault(x => x.Management_ID == VintManagId);
                        DNtMDB.Tbl_Management.Remove(resultR);
                        DNtMDB.SaveChanges();
                        //---------------خفظ ااحداث 
                        SecurityEvent sev = new SecurityEvent
                        {
                            ActionName = "Delete Management",
                            TableName = "Tbl_Management",
                            TableRecordId = resultR.ID.ToString(),
                            Description = "",
                            ManagementName = Program.GlbV_Management,
                            ActionDate = Convert.ToDateTime(DateTime.Now.ToString("dddd , MMM dd yyyy,hh:mm:ss")),
                            EmployeeName = Program.GlbV_EmpName,
                            User_ID = Program.GlbV_UserId,
                            UserName = Program.GlbV_UserName,
                            FormName = "CompaniesFrm"
                        };
                        DNtEVDB.SecurityEvents.Add(sev);
                        DNtEVDB.SaveChanges();
                        //************************************
                        MessageBox.Show(" Deleted");
                        //TreeNode node = new TreeNode();
                        //node.Text = textBox2.Text;
                        //node.Name = VintManagId.ToString();
                        //node.Tag = Vint_Parent_ID.ToString();
                        //node.Expand();
                        //treeView1.SelectedNode.Nodes.Remove(node);
                        treeView1.Nodes.Remove(treeView1.SelectedNode);
                    }
                }
                else if (LangTxtBox.Text == "ar-EG")
                {
                    var result1 = MessageBox.Show("هل تريد حذف هذه الاداره ?", "حذف اداره ", MessageBoxButtons.YesNo);
                    if (result1 == DialogResult.Yes)
                    {
                        var resultR = DNtMDB.Tbl_Management.FirstOrDefault(x => x.Management_ID == VintManagId);
                        DNtMDB.Tbl_Management.Remove(resultR);
                        DNtMDB.SaveChanges();
                        //---------------خفظ ااحداث 
                        SecurityEvent sev = new SecurityEvent
                        {
                            ActionName = "Delete Management",
                            TableName = "Tbl_Management",
                            TableRecordId = resultR.ID.ToString(),
                            Description = "",
                            ManagementName = Program.GlbV_Management,
                            ActionDate = Convert.ToDateTime(DateTime.Now.ToString("dddd , MMM dd yyyy,hh:mm:ss")),
                            EmployeeName = Program.GlbV_EmpName,
                            User_ID = Program.GlbV_UserId,
                            UserName = Program.GlbV_UserName,
                            FormName = "CompaniesFrm"
                        };
                        DNtEVDB.SecurityEvents.Add(sev);
                        DNtEVDB.SaveChanges();
                        //************************************
                        MessageBox.Show(" تم الحذف");
                        //TreeNode node = new TreeNode();
                        //node.Text = textBox2.Text;
                        //node.Name = VintManagId.ToString();
                        //node.Tag = Vint_Parent_ID.ToString();
                        //node.Expand();

                        treeView1.Nodes.Remove(treeView1.SelectedNode);
                    }

                }
            }
                
        }

        private void textBox2_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                 
                comboBox1.Focus();

            }
        }

        private void comboBox1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {

                textBox8.Focus();

            }
        }

        private void textBox3_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {

                comboBox2.Focus();

            }
        }

        private void comboBox2_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {

                textBox7.Focus();

            }
        }
    }
}
